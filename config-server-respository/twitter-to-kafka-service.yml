spring:
  cloud:
    config:
      uri:
        - http://localhost:8888
      username: admin
      password: admin
server:
  port: 8080

logging:
  level:
    root: info

twitter-to-kafka-service:
  twitter-keywords:
    - Java
    - Microservices
    - Kafka
    - Spring
    - ElasticSearch
  welcome-message: Welcome to kafka streams
  enable-v2-tweets: true
  enable-mock-tweets: false
  twitter-v2-base-url: https://api.twitter.com/2/tweets/search/stream?tweet.fields=created_at&expansions=author_id&user.fields=created_at
  twitter-v2-rules-base-url: https://api.twitter.com/2/tweets/search/stream/rules
  twitter-v2-bearer-token: AAAAAAAAAAAAAAAAAAAAAJH2dAEAAAAAyl72aeMgX4podj2UdTb01XCHmbE%3DpiyJwVnJjuK4ZntzR0Xx8XzkJMmRCrYRZcrJ8q9Z5GXsyDfvWp

retry-config:
  initial-interval: 1000
  max-interval: 10000
  multiplier: 2.0
  max-attempts: 3
  sleep-time: 2000

kafka-config:
  bootstrap-servers: localhost:19092,localhost:29092,localhost:39092
  schema-registry-url-key: schema.registry.url
  schema-registry-url: http://localhost:8081
  topic-name: twitter-topic
  topic-names-to-create:
    - twitter-topic
  number-of-partitions: 3
  replication-factor: 3

kafka-producer-config:
  key-serializer-class: org.apache.kafka.common.serialization.LongSerializer
  value-serializer-class: io.confluent.kafka.serializers.KafkaAvroSerializer
  compression-type: snappy
  acks: all
  batch-size: 16383
  batch-size-boost-factor: 100
  linger-ms: 5
  request-timeout-ms: 60000
  retry-count: 5